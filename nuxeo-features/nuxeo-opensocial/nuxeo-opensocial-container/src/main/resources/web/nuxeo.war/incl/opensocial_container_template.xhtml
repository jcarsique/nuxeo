<div xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:nxd="http://nuxeo.org/nxweb/document"
  xmlns:nxh="http://nuxeo.org/nxweb/html"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
  xmlns:nxu="http://nuxeo.org/nxweb/util">

  <c:if test="false">
    Template rendering an OpenSocial GWT container

    Parameters:
    - repositoryName: the repository name to use, mandatory
    - spaceId: the id of the Space document to use to generate the container.
    If set, we use it to retrieve the Space, otherwise we use the spaceProviderName
    to generate a Space.
    - spaceProviderName: the name of the SpaceProvider to use to get the Space document
    - documentContextId: the id of the DocumentModel considered as context, if any, optional
    - spaceName: the Space name to use, optional
    - applicationContextPath: the application context path, could be a document
    different from the documentContext.
    This path could be use for doing query for instance.
    - documentLinkBuilder: name of the document link builder to compute
    documents URL, usually a codec name. If not set, default to 'docid'.
    - activityLinkBuilder: name of the activity link builder to use to compute
    document and user links in activity message. If not set, default to 'default'.
  </c:if>

  <script type="text/javascript">
    var opensocial_messages = {
      unitIsNotEmpty: "#{messages['label.opensocial.container.unitIsNotEmpty']}",
      zoneIsNotEmpty: "#{messages['label.opensocial.container.zoneIsNotEmpty']}",
      noZoneCreated: "#{messages['label.opensocial.container.noZoneCreated']}",
      cannotLoadLayout: "#{messages['label.opensocial.container.cannotLoadLayout']}",
      cannotReachServer: "#{messages['label.opensocial.container.cannotReachServer']}",
      applicationNotCorrectlySet: "#{messages['label.opensocial.container.applicationNotCorrectlySet']}",
      cannotUpdateLayout: "#{messages['label.opensocial.container.cannotUpdateLayout']}",
      cannotUpdateFooter: "#{messages['label.opensocial.container.cannotUpdateFooter']}",
      cannotCreateZone: "#{messages['label.opensocial.container.cannotCreateZone']}",
      cannotUpdateZone: "#{messages['label.opensocial.container.cannotUpdateZone']}",
      cannotUpdateSideBar: "#{messages['label.opensocial.container.cannotUpdateSideBar']}",
      cannotUpdateHeader: "#{messages['label.opensocial.container.cannotUpdateHeader']}",
      cannotDeleteZone: "#{messages['label.opensocial.container.cannotDeleteZone']}",
      cannotCreateWebContent: "#{messages['label.opensocial.container.cannotCreateWebContent']}",
      cannotLoadWebContents: "#{messages['label.opensocial.container.cannotLoadWebContents']}",
      cannotUpdateAllWebContents: "#{messages['label.opensocial.container.cannotUpdateAllWebContents']}",
      cannotUpdateWebContent: "#{messages['label.opensocial.container.cannotUpdateWebContent']}",
      cannotDeleteWebContent: "#{messages['label.opensocial.container.cannotDeleteWebContent']}",
      cannotLoadContainerBuilder: "#{messages['label.opensocial.container.cannotLoadContainerBuilder']}",
      cannotAddExternalWebContent: "#{messages['label.opensocial.container.cannotAddExternalWebContent']}",
      cannotFindWebContent: "#{messages['label.opensocial.container.cannotFindWebContent']}",
      preferenceDoesNotExist: "#{messages['label.opensocial.container.preferenceDoesNotExist']}",
      isLoading: "#{messages['label.opensocial.container.isLoading']}",
      isSureToDeleteGadget: "#{messages['label.opensocial.container.isSureToDeleteGadget']}",
      windowTitle: "#{messages['label.opensocial.container.windowTitle']}",
      containerSizeTitle: "#{messages['label.opensocial.container.containerSizeTitle']}",
      sizeInPixel: "#{messages['label.opensocial.container.sizeInPixel']}",
      customSize: "#{messages['label.opensocial.container.customSize']}",
      unknown: "#{messages['label.opensocial.container.unknown']}",
      sideBarTitle: "#{messages['label.opensocial.container.sideBarTitle']}",
      customContentTitle: "#{messages['label.opensocial.container.customContentTitle']}",
      addRow: "#{messages['label.opensocial.container.addRow']}",
      headerNFooterTitle: "#{messages['label.opensocial.container.headerNFooterTitle']}",
      enableHeader: "#{messages['label.opensocial.container.enableHeader']}",
      enableFooter: "#{messages['label.opensocial.container.enableFooter']}",
      showCodeTitle: "#{messages['label.opensocial.container.showCodeTitle']}",
      showCode: "#{messages['label.opensocial.container.showCode']}",
      closeTitle: "#{messages['label.opensocial.container.closeTitle']}",
      close: "#{messages['label.opensocial.container.close']}",
      preferences: "#{messages['label.opensocial.container.preferences']}",
      title: "#{messages['label.opensocial.container.title']}",
      headerColor: "#{messages['label.opensocial.container.headerColor']}",
      titleColor: "#{messages['label.opensocial.container.titleColor']}",
      borderColor: "#{messages['label.opensocial.container.borderColor']}",
      save: "#{messages['label.opensocial.container.save']}",
      choose: "#{messages['label.opensocial.container.choose']}",
      createdBy: "#{messages['label.opensocial.container.createdBy']}",
      folderSelection: "#{messages['label.opensocial.container.folderSelection']}",
      cantDeleteLastZoneError: "#{messages['label.opensocial.container.cantDeleteLastZoneError']}",
      fold: "#{messages['label.opensocial.container.fold']}",
      unfold: "#{messages['label.opensocial.container.unfold']}",
      configure: "#{messages['label.opensocial.container.configure']}",
      maximize: "#{messages['label.opensocial.container.maximize']}",
      minimize: "#{messages['label.opensocial.container.minimize']}"
    }

    var nuxeo = (function(nuxeo) {
      nuxeo.openSocial = nuxeo.openSocial || {};

      nuxeo.openSocial.container = {
        repositoryName: "#{repositoryName}",
        id:"#{spaceId}",
        spaceProviderName: "#{spaceProviderName}",
        documentContextId: "#{documentContextId}",
        spaceName: "#{spaceName}",

        parameters: {
          showPreferencesAfterAddingGadget: false,
          userLanguage: "#{localeSelector.language}",
          generateTitle: true,
          <c:if test="#{not empty documentLinkBuilder}">
          documentLinkBuilder: "#{documentLinkBuilder}",
          </c:if>
          <c:if test="#{not empty activityLinkBuilder}">
            activityLinkBuilder: "#{activityLinkBuilder}",
          </c:if>
          applicationContextPath: "#{nxu:javaScriptEscape(applicationContextPath)}"
        }
      };

      nuxeo.openSocial.addGadget = function(name, url) {
        jQuery.fancybox.close();
        nuxeo.openSocial.container.addGadget('wcopensocial', [{WC_GADGET_DEF_URL:url}, {WC_GADGET_NAME:name}]);
      };

      return nuxeo;
    })(nuxeo || {});

    jQuery(document).ready(function() {
      jQuery("#addGadgetButton").fancybox({
        'width'       : '75%',
        'height'      : '75%',
        'autoScale'     : true,
        'transitionIn'    : 'none',
        'transitionOut'   : 'none',
        'type'        : 'iframe',
        'enableEscapeButton': true,
        'centerOnScroll': true
      });
    });
  </script>

  <div class="titleBlock">
    <ui:insert name="opensocial_container_title">
    </ui:insert>
  </div>

  <div class="globalActions">
    <div class="globalActionBar">
      <div class="contextActions">
        <ui:insert name="opensocial_container_actions">
          <c:if test="#{not currentUser.anonymous}">
            <a onclick="nuxeo.openSocial.container.openContainerBuilder();" id="openContainerBuilder" title="#{messages['label.opensocial.container.change.layout']}" class="button">#{messages['label.opensocial.container.change.layout']}</a>
            <a id="addGadgetButton" href="#{baseURL}site/gadgets?language=#{localeSelector.language}" class="button">#{messages['label.opensocial.container.add.gadget']}</a>
          </c:if>
        </ui:insert>
      </div>
    </div>
  </div>

  <div class="clear"></div>

  <script type="text/javascript" language="javascript" src="#{baseURL}site/gwt-container/gwtContainer/gwtContainer.nocache.js"></script>
  <div id="containerPanel">
    <div id="gwtContainerDiv" style=""></div>
  </div>

</div>
