<?xml version="1.0" encoding="UTF-8"?>
<component
  name="xml.opensocialConfig">

  <extension target="org.nuxeo.opensocial.service.impl.OpenSocialServiceImpl"
    point="openSocialConfig">

    <!--overall configuration of opensocial that is sufficient for most people -->
    <opensocial>
      <!--most users don't need to create this key but it can be
created with this command line on unix
dd if=/dev/random bs=32 count=1  | openssl base64 > /tmp/key.txt
then just paste the contents of key.txt into this tag-->
      <signingKey></signingKey>

      <!--this is the URL that you want shindig to expose to other service providers
          where it can call us back.  if you have nuxeo running somewhere other than
          /nuxeo, you should set this to something like /<myPrefix>/opensocial/gadgets/oauthcallback -->
      <!--most people can just put the hostname+port that is visible to outside providers in the right
          place below and then keep the same path part ... some providers (like Atlassian)
          allow you to supply this on their config panel as well but it appears that
          the value here overrides the value there... this value must NOT end in slash!-->
      <oauthCallbackUrl>http://192.168.2.203:8080/nuxeo/opensocial/gadgets/oauthcallback</oauthCallbackUrl>

      <!--very few folks need to use this, it's only needed if you want to use
          different servers than the "all in one shindig + nuxeo" configuration -->

      <!--
      <portals>
        <portalConfig>
          <domain>localhost</domain>
          <containerName>default</containerName>
          <key></key>
        </portalConfig>
      </portals>
      -->

      <!-- you should change this to something you create yourself -->
      <!-- This is the key that is used by a particular instance of nuxeo (running
        shindig) for signing requests to external OAuth providers. This key is
        the "consumer private key" in the language of OAuth. It must be of type
        RSA because we currently do not have support for the HMAC style keys. The
        generation of this private key can be done like this on unix:

        openssl req -newkey rsa:1024 -days 365 -nodes -x509 -keyout testkey.pem -out testkey.pem -subj '/CN=mytestkey'
        openssl pkcs8 -in testkey.pem -out oauthkey.pem -topk8 -nocrypt -outform PEM

       The result is in oauth and should be pasted into the configuration file
       as the externalPrivateKey value.
      -->
      <externalPrivateKey>
        -----BEGIN PRIVATE KEY-----
        MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAM7wu+HCQuBfVyPM
        TgA9SZh8jcqY5ZF51N2GuwWcLLfhB7/wdj3iE8d564raH52FU2onnoOqry6u/A1t
        DzKy1riK7g6p3pubP0x9oAaPnkDCVUAPimAvGuZSWBSr3ryDP5GHgI/VYAOiXASM
        TISq5qxpmat54trYQJFN3iSh0spZAgMBAAECgYBzg8/s8opwQugalIYJ/iwh0Y04
        xWaIcVCQpA+rzwTrU9MGoozueE+ALx97b8zsGit4+0qxxsppLcaHHBS6wTe35ML8
        OggORPf0xEQAZpYRZeMX91sDNNVVooGTAOh5htH5E9eRqbvlsALO8/Ket8+virvk
        o6wcGo05Z9yjyT8ssQJBAO3izTwkXC+raqgV4TP7jchesgKTDvScBiZEtVqFston
        9U5A5M3eEbHOBgMVKji3BPyGCTFftC2LZl7VfzQWqi0CQQDesrLc1FONfMNpyEgX
        QcQSg9Au/xhLq+AKUupozRCin25VXH0Jqn6KMdANKZdLt2wuDTUUL0Nd+06Le6Lj
        pdhdAkEAx5ADwpdyKp9wG1A3m8dFWzlttlEuM7CMTCBJz4Xn07G/zYUNLVNFntcK
        Hh3sTKXk7f93yM7TtX2DRL1wN/9nhQJBAMnOjDF7o7+aqQbqPRH+Qe05T+XWuzCP
        r3YLj2qrMgD8kyJ9rr2cqBEZdN0IrJcrv7e3tjr1XYoEGzhhMMo01u0CQQC7Kky2
        +IQgLJ2EwBNzqAgH9UglOwwPKp4sYGnr63Po660N8BvJKBPErFx8fHE6isxyrAAp
        CtChzksnyjXXLZUO
        -----END PRIVATE KEY-----
      </externalPrivateKey>
      <!--this is the 'name' of the private key above... most service providers
  do not seem to use this field, so most people can leave this
  at its default value -->
      <externalPrivateKeyName>nuxeo</externalPrivateKeyName>


      <!--
      This is here just for convenience of keeping everything together. This is
      the public key (really a certificate) that you need to give to external
      oauth provider to indicate that you have the private key above. Assuming
      you generated the key with the lines above, you should be able to simply
      paste the "certificate" portion of the testkey.pem file into this field.
      It is not used by nuxeo in any way, but <b>will</b> be needed when you
      configure an external provider.

      Note that many providers accept the certificate then run a computation to
      extract the public key from it. This means that the value displayed when
      you look at the provider configuration may be different than the one you
      have below.
      -->
      <externalPublicCertificate>
        -----BEGIN CERTIFICATE-----
        MIICMDCCAZmgAwIBAgIJAItBXRxS7f5QMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNV
        BAMTEG51eGVvLW9wZW5zb2NpYWwwHhcNMTAwMjI1MDkyNDQzWhcNMTEwMjI1MDky
        NDQzWjAbMRkwFwYDVQQDExBudXhlby1vcGVuc29jaWFsMIGfMA0GCSqGSIb3DQEB
        AQUAA4GNADCBiQKBgQDO8LvhwkLgX1cjzE4APUmYfI3KmOWRedTdhrsFnCy34Qe/
        8HY94hPHeeuK2h+dhVNqJ56Dqq8urvwNbQ8ysta4iu4Oqd6bmz9MfaAGj55AwlVA
        D4pgLxrmUlgUq968gz+Rh4CP1WADolwEjEyEquasaZmreeLa2ECRTd4kodLKWQID
        AQABo3wwejAdBgNVHQ4EFgQUV3pLOxhcSHqZ7J7X7EdzXGcQsx4wSwYDVR0jBEQw
        QoAUV3pLOxhcSHqZ7J7X7EdzXGcQsx6hH6QdMBsxGTAXBgNVBAMTEG51eGVvLW9w
        ZW5zb2NpYWyCCQCLQV0cUu3+UDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA
        A4GBAE58p3e9ZJXRal2E1tD9sb041XhzMIyOu1jiDYuLPSg1rgKzpJFK9cDgvYmJ
        /SQnZXq6wilQrPDiK1EFyE3GOjoDgdgw9IA7zER1veEAWH1/nuT5FiLgiue+KVsr
        rs11LfViqxODsyQ7wedcLssNoE1Y4QMmUFIilPf+OzVv5efp
        -----END CERTIFICATE-----
      </externalPublicCertificate>

      <!--list of outside oauth providers that you have told about
  nuxeo being a consumer... and thus nuxeo can run their
  gadgets that need oauth -->
      <oauthservices>
        <oauthservice>
          <!--these are gadgets that are displayed on the nuxeo dashboard that need oauth-->
          <gadgetUrl>http://marge:8080/nuxeo/site/gadgets/confluencefeed/confluencefeed.xml</gadgetUrl>
          <!--this must match the service name in the gadget's oauth service section.. if you don't see
such a service name, leave this blank and the service name will default to "" -->
          <serviceName></serviceName>
          <!--this is something you supply to the service provider... it's just a string -->
          <consumerKey>nuxeo-opensocial</consumerKey>
          <!--if you leave this blank, we will use the RSA key defined above as the externalPrivateKey... this
is only needed if you want to use a special, different key for this service provider -->
          <consumerSecret></consumerSecret>
        </oauthservice>
        <oauthservice>
          <gadgetUrl>http://marge:7070/rest/gadgets/1.0/g/com.atlassian.streams.confluence:activitystream-gadget/gadgets/conf-activitystream-gadget.xml</gadgetUrl>
          <serviceName></serviceName>
          <consumerKey>nuxeo-opensocial</consumerKey>
          <consumerSecret></consumerSecret>
        </oauthservice>
        <oauthservice>
          <gadgetUrl>http://marge:7070/rest/gadgets/1.0/g/com.atlassian.confluence.plugins.gadgets:gadget-search/gadgets/gadget-search.xml
          </gadgetUrl>
          <serviceName></serviceName>
          <consumerKey>nuxeo-opensocial</consumerKey>
          <consumerSecret></consumerSecret>
        </oauthservice>
        <oauthservice>
          <gadgetUrl>http://atlas.in.nuxeo.com/jira4/rest/gadgets/1.0/g/com.atlassian.jira.gadgets:assigned-to-me-gadget/gadgets/assigned-to-me-gadget.xml</gadgetUrl>
          <serviceName></serviceName>
          <consumerKey>nuxeo-opensocial</consumerKey>
          <consumerSecret></consumerSecret>
        </oauthservice>
        <oauthservice>
          <gadgetUrl>http://lisa.in.nuxeo.com/jira4/rest/gadgets/1.0/g/com.atlassian.jira.gadgets:road-map-gadget/gadgets/roadmap-gadget.xml</gadgetUrl>
          <serviceName></serviceName>
          <consumerKey>nuxeo-opensocial</consumerKey>
          <consumerSecret></consumerSecret>
        </oauthservice>
      </oauthservices>


      <!--
       This a list of nuxeo trusted hosts. Such a host will be passed the
       browsers jsession id to avoid the need to constantly re-authenticate to
       retrieve nuxeo data when the user is already logged into a nuxeo server
       to access the dashboard. List should be coma separated.
      -->
      <trustedHosts>
        localhost,127.0.0.1,lisa
      </trustedHosts>

    </opensocial>
  </extension>
</component>

